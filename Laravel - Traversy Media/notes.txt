|-------------------------------------------------
| Creating a controller within a new subdirectory
|-------------------------------------------------

- php artisan make:controller NAME OF NEW FOLDER TO BE CREATED\\ NAME OF CONTROLLER


|-------------------------------------------------
| Creating a Route to chain onto
|-------------------------------------------------

- Route::get('/register', [RegisterController::class, 'index'] )->name('register');
** Here above we are naming this route register. This way we can include it into our blade file with the route helper function.


|---------------------------------------------------------------------------
| Using the request object in a controller file to send data to the database
|---------------------------------------------------------------------------
- public function store(Request $request) {
       dd($request->email);     
    }

|---------------------------------------------
|Laravel's base controller - validate method
|---------------------------------------------
$this->validate($request, [
            'name'=> 'required|max:255',
            'username'=> 'required|alpha_num',
            'email'=> 'required|max:255',
            'password'=> 'required|confirmed',            
        ]); 


|---------------------------------------------------
| Using old session data to improve user experience
|--------------------------------------------------
- value="{{ old('name') }} ---> value attribute in the input field in HTML
- Basically when the user forgets to enter data for a certain input field and they submit the form. You still want their data to be saved on the page (Nothing should be lost!)

|---------------------------------------------------
| Process of setting up a controller 
|--------------------------------------------------
1. Create the controller using the artisan command
2. Add the controller to the web.php and don't forget to import it 
3. 

|---------------------------------------------------
| Middleware
|--------------------------------------------------
Is used to prevent things from progressing to the next step or prevent modification.

1. In the routes folder (web.php)
Route::get('/dashboard', [DashboardController::class, 'index'])
->name('dashboard');
->middleware('auth');

OR 

2. Within the controller as a constructor
public function __construct() {
        $this->middleware(['auth']);
    }

|---------------------------------------------------
| Creating models and migrations simultaneously
|--------------------------------------------------

- php artisan make:model Post --help ----> This will give us a list of all the commands related to models and migrations
- php artisan make:model Post -m ---> This will create a model and a migration
- php artisan make:model Post -m -f ---> This will create a model and a migration as well as the factory. 

|---------------------------------------------------
| Using tinker to input fake data
|--------------------------------------------------

- php artisan tinker
- define the models default state
    Example in PostFactory.php: 
    
    return [
            'body' => $this->faker->sentence(20),
        ];

|---------------------------------------------------
| Creating a migration with the table
|--------------------------------------------------

- php artisan make:migration create_likes_table --create=likes