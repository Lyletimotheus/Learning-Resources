#########################
######  MVC Model #######
#########################

---------DATABASE----------
    |                   |
    |                   |
    |                   |
CONTROLLER              VIEW

# This is the way we will structure the directory, using the MVC model.

---------------------
PROPERTIES & METHODS
---------------------
- Private properties can only be accessed from inside the class.
- Public properties and methods can be accessed globally.
- Protected properties and methods can only be accessed from a inherited class.

----------
DESTRUCTOR
----------
- Used to clean up objects or close off database connections.
- Just use the unset() function to delete objects.

------------------------------
STATIC PROPERTIES AND METHODS
------------------------------
- Static properties or method: Do I need to call this property or method first without creating a object?
- These properties and methods don't have to be part of an object.

-----------------
TYPE DECLARATIONS
-----------------
- When you want the variable to be strict use the following function: declare(strict_types = 1);
- By using type declaration, we can throw an error if wrong type is given!
Works without:
    - class/interface names 
    - self (used to reference to same class)
    - array
    - callable
    - bool
    - float
    - int 
    - string
    - iterable
    - object 

-------------------------
SCOPE RESOLUTION OPERATOR
-------------------------
- Scope Resolution Operator (::)

-----------------------
INTERFACES
-----------------------
- Interfaces is a blueprint to group specific classes and we tell them how they should behave.

-------------------------
Anonymous Class
-------------------------
- Does not store the class in memory and gets deleted once we store it to our object